import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import mplfinance as mpf
import yfinance as yf
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# API YFinance: Download a financial market dataframe within a given time period
dados = yf.download('PETR4.SA', start = '2023-01-01', end = '2023-12-31')
print("\nBaixando o dataframe principal usando YFinance.")
#print(dados)

# Renaming DF columns (Esse modo renomeia todas as colunas de uma única vez, porém vocë é obrigado a renomar todas ao mesmo tempo)
dados.columns = ['Abertura', 'Maximo', 'Minimo', 'Fechamento', 'Fech_Ajust', 'Volume']
print("\nRenomeando colunas do DF.")
#print(dados)

# Renaming the index
dados = dados.rename_axis('Data')
print("\nRenomeando o índice.")
#print(dados)

# Graph - Variation in the 'Fechamento' column and user input validation
dados['Fechamento'].plot(figsize=(10,6)) # Criando o gráfico com largura e altura
plt.title('Variação do preço (Fechamento) por data', fontsize=16) # Inserindo título ao gráfico
plt.legend(['Fechamento']) # Inserindo legenda
print("\nGráfico – Variação na coluna \"Fechamento\".")

# Loop to ensure valid user input
while True:
    option_visualizar = input("\nDeseja visualizar o gráfico? \n(S) sim ou (N) nao: ")
    if option_visualizar.upper() == "S":
        plt.show()
        break  # Exit the loop if the option is 'Y'
    elif option_visualizar.upper() == "N":
        print("\n")
        break  # Exit the loop if the option is 'N'
    else:
        print("Opção inválida! Digite S ou N para prosseguir.")

# Creating new df to work with candlestick chart
df = dados.head(60).copy()

df['Data'] = df.index # Convertendo o índice em uma coluna de data
# Convertendo as datas para o formato numérico de matplotlib
# Isso é necessário para que p Matplotlib possa plotar as datas corretamente no gráfico
df['Data'] = df['Data'].apply(mdates.date2num)
print(df)